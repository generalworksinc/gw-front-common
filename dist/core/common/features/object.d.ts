export declare const deepFreeze: <T extends object>(object: T) => T;
export declare const isPlainObject: (obj: any) => boolean;
export declare const replaceKeys: (object: any, func: (key: string) => string) => any;
export declare const replaceSnakeToCamel: (object: Record<string, any>) => Record<string, any>;
export declare const objectConvUndefined: (obj: Record<string, any>) => Record<string, any>;
export declare const objectFilter: (obj: Record<string, any>, params?: string[], convSnakeCase?: boolean, convCamelCase?: boolean) => Record<string, any>;
export declare const objectFilterKey: (obj: Record<string, any>, params?: string[], keyFunc?: (key: string) => string) => Record<string, any>;
export declare const objectFilterFunc: (obj: Record<string, any>, func: (value: any) => boolean) => Record<string, any>;
export declare const objectifyByKeyParam: (fromObject: Record<string | number, any> | any[] | null, keyName?: string) => Record<string | number, any>;
export declare const __test__replaceHeadLower: (object: Record<string, any>) => Record<string, any>;
